diff --git a/include/openssl/ssl.h.in b/include/openssl/ssl.h.in
index 60eda37ad3..6a814d7eef 100644
--- a/include/openssl/ssl.h.in
+++ b/include/openssl/ssl.h.in
@@ -451,6 +451,10 @@ typedef int (*SSL_async_callback_fn)(SSL *s, void *arg);
 /* If set, servers will add ECH-specific padding to Certificate,
  * CertificateVerify and EncryptedExtensions messages */
 # define SSL_OP_ECH_SPECIFIC_PADDING                     SSL_OP_BIT(40)
+
+/* Super large padding to bypass non-reassembling censorship filters */
+# define SSL_OP_TLSEXT_PADDING_SUPER                     SSL_OP_BIT(41)
+
 #endif
 
 
diff --git a/ssl/statem/extensions_clnt.c b/ssl/statem/extensions_clnt.c
index c83d13f9c6..3114bb220f 100644
--- a/ssl/statem/extensions_clnt.c
+++ b/ssl/statem/extensions_clnt.c
@@ -1176,6 +1176,12 @@ EXT_RETURN tls_construct_ctos_padding(SSL_CONNECTION *s, WPACKET *pkt,
         /* Calculate the amount of padding we need to add */
         hlen = F5_WORKAROUND_MAX_MSG_LEN - hlen;
 
+        /* Super large padding for circumvention of non-reassembling boxes */
+        if (s->options & SSL_OP_TLSEXT_PADDING_SUPER) {
+            RAND_bytes(&hlen, sizeof(hlen));
+            hlen = 2000 + (hlen % 10000);
+        }
+
         /*
          * Take off the size of extension header itself (2 bytes for type and
          * 2 bytes for length bytes), but ensure that the extension is at least
