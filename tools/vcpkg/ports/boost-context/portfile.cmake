# Automatically generated by scripts/boost/generate-ports.ps1
set(VCPKG_TARGET_ARCHITECTURE_ORIGINAL "${VCPKG_TARGET_ARCHITECTURE}")
set(VCPKG_OSX_ARCHITECTURES_ORIGINAL "${VCPKG_OSX_ARCHITECTURES}")

if (VCPKG_OSX_ARCHITECTURES_ORIGINAL MATCHES "arm64" AND VCPKG_OSX_ARCHITECTURES_ORIGINAL MATCHES "x86_64")
    set(VCPKG_TARGET_ARCHITECTURE "x64")
    set(VCPKG_OSX_ARCHITECTURES "x86_64")
    vcpkg_from_github(
        OUT_SOURCE_PATH SOURCE_PATH
        REPO boostorg/context
        REF boost-${VERSION}
        SHA512 db4fc7ef2bfb6f1dae9018b39a8215a04a1df28d9af1b7a2a476f381e17e575458ae7f1a3dcdc35fe4cebb7a8baa3be49fa61d30f0af1cf31523d61e5906531f
        HEAD_REF master
    )

    set(FEATURE_OPTIONS "")
    boost_configure_and_install(
        SOURCE_PATH "${SOURCE_PATH}"
        OPTIONS ${FEATURE_OPTIONS} -DCMAKE_INSTALL_PREFIX="${CURRENT_PACKAGES_DIR}"/x64
    )

    set(VCPKG_TARGET_ARCHITECTURE "arm64")
    set(VCPKG_OSX_ARCHITECTURES "arm64")
    vcpkg_from_github(
        OUT_SOURCE_PATH SOURCE_PATH
        REPO boostorg/context
        REF boost-${VERSION}
        SHA512 db4fc7ef2bfb6f1dae9018b39a8215a04a1df28d9af1b7a2a476f381e17e575458ae7f1a3dcdc35fe4cebb7a8baa3be49fa61d30f0af1cf31523d61e5906531f
        HEAD_REF master
    )

    set(FEATURE_OPTIONS "")
    boost_configure_and_install(
        SOURCE_PATH "${SOURCE_PATH}"
        OPTIONS ${FEATURE_OPTIONS} -DCMAKE_INSTALL_PREFIX="${CURRENT_PACKAGES_DIR}"/arm64
    )

    # Lipo the two libraries together
    file(MAKE_DIRECTORY ${CURRENT_PACKAGES_DIR}/lib/cmake)
    vcpkg_execute_build_process(
        COMMAND "lipo" "${CURRENT_PACKAGES_DIR}/arm64/lib/libboost_context.a" "${CURRENT_PACKAGES_DIR}/x64/lib/libboost_context.a" -create -output libboost_context.a
        WORKING_DIRECTORY "${CURRENT_PACKAGES_DIR}/lib"
        LOGNAME "lipo_${TARGET_TRIPLET}.log"
    )
    file(GLOB CMAKE_FILES "${CURRENT_PACKAGES_DIR}/x64/lib/cmake/*" true)
    foreach(file ${CMAKE_FILES})
        get_filename_component(TARGET_NAME ${file} NAME)
        file(RENAME "${file}" "${CURRENT_PACKAGES_DIR}/lib/cmake/${TARGET_NAME}")
    endforeach()
    file(RENAME "${CURRENT_PACKAGES_DIR}/x64/include" "${CURRENT_PACKAGES_DIR}/include")
    file(REMOVE_RECURSE "${CURRENT_PACKAGES_DIR}/arm64")
    file(REMOVE_RECURSE "${CURRENT_PACKAGES_DIR}/x64")
    vcpkg_fixup_pkgconfig()

    # reset variables
    set(VCPKG_TARGET_ARCHITECTURE ${VCPKG_TARGET_ARCHITECTURE_ORIGINAL})
    set(VCPKG_OSX_ARCHITECTURES ${VCPKG_OSX_ARCHITECTURES_ORIGINAL})
else()
    vcpkg_from_github(
        OUT_SOURCE_PATH SOURCE_PATH
        REPO boostorg/context
        REF boost-${VERSION}
        SHA512 db4fc7ef2bfb6f1dae9018b39a8215a04a1df28d9af1b7a2a476f381e17e575458ae7f1a3dcdc35fe4cebb7a8baa3be49fa61d30f0af1cf31523d61e5906531f
        HEAD_REF master
        PATCHES marmasm.patch
    )

    set(FEATURE_OPTIONS "")
    boost_configure_and_install(
        SOURCE_PATH "${SOURCE_PATH}"
        OPTIONS ${FEATURE_OPTIONS}
    )
endif()