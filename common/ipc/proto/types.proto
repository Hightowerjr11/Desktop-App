syntax = "proto2";

package ProtoTypes;

enum ConnectStateType
{
    DISCONNECTED = 0;
    CONNECTED = 1;
    CONNECTING = 2;
    DISCONNECTING = 3;
}

enum ConnectError
{
  // common
  NO_CONNECT_ERROR = 0;
  AUTH_ERROR = 1;
  COULD_NOT_FETCH_CREDENTAILS = 2;
  LOCATION_NOT_EXIST = 3;
  LOCATION_NO_ACTIVE_NODES = 4;
  CANT_RESOLVE_HOSTNAME = 5;
  CONNECTION_BLOCKED = 6;
  // openvpn
  NO_OPENVPN_SOCKET = 7;
  CANT_RUN_OPENVPN = 8;
  CANNOT_ALLOCATE_TUN_TAP = 9;
  NO_INSTALLED_TUN_TAP = 10;
  ALL_TAP_IN_USE = 11;
  CANNOT_CONNECT_TO_SERVICE_PIPE = 12;
  CANNOT_WRITE_TO_SERVICE_PIPE = 13;
  NO_AVAILABLE_PORT = 14;
  PROXY_AUTH_ERROR = 15;
  UDP_CANT_ASSIGN = 16; 
  CONNECTED_ERROR = 17;
  INITIALIZATION_SEQUENCE_COMPLETED_WITH_ERRORS = 18;
  UDP_NO_BUFFER_SPACE = 19;
  UDP_NETWORK_DOWN = 20;
  TCP_ERROR = 21;
  CANNOT_OPEN_CUSTOM_CONFIG = 22;
  // ikev2
  IKEV_FAILED_TO_CONNECT = 23;
  IKEV_NOT_FOUND_WIN = 24;
  IKEV_FAILED_SET_ENTRY_WIN = 25;
  IKEV_FAILED_MODIFY_HOSTS_WIN = 26;
  IKEV_NETWORK_EXTENSION_NOT_FOUND_MAC = 27;
  IKEV_FAILED_SET_KEYCHAIN_MAC = 28;
  IKEV_FAILED_START_MAC = 29;
  IKEV_FAILED_LOAD_PREFERENCES_MAC = 30;
  IKEV_FAILED_SAVE_PREFERENCES_MAC = 31;
  // wireguard
  WIREGUARD_CONNECTION_ERROR = 32;
  // emergency
  EMERGENCY_FAILED_CONNECT = 33;
  WINTUN_OVER_CAPACITY = 34;
  WINTUN_DRIVER_REINSTALLATION_ERROR = 35;
  TAP_DRIVER_REINSTALLATION_ERROR = 36;
  WINTUN_FATAL_ERROR = 37;
  EXE_VERIFY_WSTUNNEL_ERROR = 38;
  EXE_VERIFY_STUNNEL_ERROR = 39;  
  EXE_VERIFY_OPENVPN_ERROR = 40;
  EXE_VERIFY_WIREGUARD_ERROR = 41;
}

enum DisconnectReason
{
  DISCONNECTED_ITSELF = 0;
  DISCONNECTED_BY_USER = 1;
  DISCONNECTED_BY_RECONNECTION_TIMEOUT_EXCEEDED = 2;
  DISCONNECTED_WITH_ERROR = 3;
}

message LocationId
{
  optional int32 type = 1 [default = 0]; 
  optional int32 id = 2; 
  optional string city = 3;
}

message ConnectState
{
  optional ConnectStateType connect_state_type = 1 [default = DISCONNECTED];
  optional DisconnectReason disconnect_reason = 2 [default = DISCONNECTED_BY_USER];
  optional ConnectError connect_error = 3 [default = NO_CONNECT_ERROR];   // use if disconnect_reason == DISCONNECTED_WITH_ERROR
  optional LocationId location = 4;  // valid only for connecting/connected state
}