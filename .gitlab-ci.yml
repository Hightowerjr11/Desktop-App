# Define Stages
stages:
  - Build Dependencies 1
  - Build Dependencies 2
  - Build Dependencies 3
  - Build
  - Artifact Upload

#before_script:
#  - sample

# Set variables inherited by all jobs
variables:
  GIT_DEPTH: 5 # Only grab the last 5 commits when cloning
  NEXUS_BASEURL: 'https://nexus.int.windscribe.com'
  NEXUS_PATH_ROOT: '/repository/$CI_PROJECT_NAME/$CI_PROJECT_NAME/'
  NEXUS_PATH_LATEST: '/latest'
  NEXUS_PATH_BRANCHES: '/branches'
  NEXUS_PATH_TAGS: '/tags'
  NEXUS_PATH_DEPS: '/repository/$CI_PROJECT_NAME/$CI_PROJECT_NAME/dependencies'
  NEXUS_PATH_DEPS_LATEST: '/latest'
  NEXUS_PATH_DEPS_BRANCHES: '/branches'
  NEXUS_PATH_DEPS_TAGS: '/tags'
  TARGET: '*.exe'
  #NEXUS_USERNAME: "sample"         # Set in Gitlab variables
  #NEXUS_PASSWORD: "VhVvMiM3jD04c"  # Set in Gitlab variables
  CODE_SIGNING_PFX_PATH: 'installer\windows\signing\code_signing.pfx'
  RUNNING_CI: 1
  BUILDROOT: 'build-libs'
  TMPROOT: 'temp'
  ARTIFACT_INSTALLER: 'installer.exe'
  CURL_WIN: 'tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem'
  CURL_MAC: 'curl               --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem'

include:
  - local: 'vars.yml'

.template_win10_build: &template_win10_build
  tags: [win10]
  before_script:
    # run this blindly until baked into image
    - python tools/bin/get-pip.py
    - python -m pip install -r tools/requirements.txt


.template_mac_build: &template_mac_build
  tags: [macos11]
  before_script:
    # run this blindly until baked into image
    - python tools/bin/get-pip.py
    - python -m pip install -r tools/requirements.txt


# Build Dependency and Upload Jom
build:win:jom:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_JOM
  script:
    - tools/deps/install_jom -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/jom.yml

# No jom for mac


# Build Dependency and Upload Cares
build:win:cares:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_CARES
  script:
    - tools/deps/install_cares -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/cares.yml


build:mac:cares:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_CARES
  script:
    - tools/deps/install_cares -zip
    - $CURL_MAC --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/cares.yml


# Build Dependency and Upload Lzo
build:win:lzo:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_LZO
  script:
    - tools/deps/install_lzo -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/lzo.yml


build:mac:lzo:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_LZO
  script:
    - tools/deps/install_lzo -zip
    - $CURL_MAC --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/lzo.yml


# Build Dependency and Upload Boost
build:win:boost:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_BOOST
  script:
    - tools/deps/install_boost -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/boost.yml


build:mac:boost:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_BOOST
  script:
    - tools/deps/install_boost -zip
    - $CURL_MAC --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/boost.yml

# Build Dependency and Upload Wireguard
build:win:wireguard:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_WIREGUARD
  script:
    - tools/deps/install_wireguard -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/wireguard.yml


build:mac:wireguard:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_WIREGUARD
  script:
    - tools/deps/install_wireguard -zip
    - $CURL_MAC --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/wireguard.yml

# Build Dependency and Upload Gtest
build:win:gtest:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_GTEST
  script:
    - tools/deps/install_gtest -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/gtest.yml


build:mac:gtest:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_GTEST
  script:
    - tools/deps/install_gtest -zip
    - $CURL_MAC --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/gtest.yml


# Build Dependency and Upload Openssl
build:win:openssl:
  <<: *template_win10_build
  stage: Build Dependencies 2
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_OPENSSL
  # needs:
    # - {job: 'build:win:jom', optional: true}
  script:
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_openssl -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/openssl.yml
      - tools/vars/jom.yml


build:mac:openssl:
  <<: *template_mac_build
  stage: Build Dependencies 2
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_OPENSSL
  script:
    - tools/deps/install_openssl -zip
    - $CURL_MAC --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/openssl.yml

# Build Dependency and Upload Zlib
build:win:zlib:
  <<: *template_win10_build
  stage: Build Dependencies 2
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_ZLIB
  # needs:
    # - {job: 'build:win:jom', optional: true}
  script:
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_zlib -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/zlib.yml
      - tools/vars/jom.yml

# No zlib for mac


# Build and Upload Curl
build:win:curl:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_CURL
  # needs:
    # - {job: 'build:win:openssl', optional: true}
    # - {job: 'build:win:zlib', optional: true}
  script:
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_ZLIB "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_ZLIB}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_curl -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/curl.yml
      - tools/vars/zlib.yml
      - tools/vars/openssl.yml


build:mac:curl:
  <<: *template_mac_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_CURL
  # needs:
    # - {job: 'build:win:openssl', optional: true}
    # - {job: 'build:win:zlib', optional: true}
  script:
    - $CURL_MAC --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_OPENSSL}"
    - find ./build-libs/ -type f -name "*.zip" -exec unzip -d "{}" "{}"\;
    - tools/deps/install_curl -zip
    - $CURL_MAC --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/curl.yml
      - tools/vars/openssl.yml


# Build and Upload Openvpn
build:win:openvpn:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_OPENVPN
  # needs:
    # - {job: 'build:win:openssl', optional: true}
    # - {job: 'build:win:lzo', optional: true}
  script:
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_LZO "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_LZO}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_openvpn -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/openvpn.yml
      - tools/vars/openssl.yml
      - tools/vars/jom.yml
      - tools/vars/lzo.yml


# Build and Upload Protobuf
build:win:protobuf:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_PROTOBUF
  # needs:
    # - {job: 'build:win:zlib', optional: true}
  script:
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_ZLIB "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_ZLIB}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_protobuf -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/protobuf.yml
      - tools/vars/zlib.yml
      - tools/vars/jom.yml


# Build and Upload Qt
build:win:qt:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_QT
  # needs:
    # - {job: 'build:win:jom', optional: true}
    # - {job: 'build:win:openssl', optional: true}
  script:
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_qt -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/qt.yml
      - tools/vars/openssl.yml
      - tools/vars/jom.yml


# Build and Upload Stunnel
build:win:stunnel:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_STUNNEL
  # needs:
    # - {job: 'build:win:jom', optional: true}
    # - {job: 'build:win:openssl', optional: true}
  script:
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_stunnel -zip
    - $CURL_WIN --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - changes:
      - tools/vars/stunnel.yml
      - tools/vars/openssl.yml
      - tools/vars/jom.yml


# Build and Upload Installer
build:win:installer:
  <<: *template_win10_build
  stage: Build
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_INSTALLER
  # needs:
    # - {job: 'build:win:jom', optional: true}
    # - {job: 'build:win:cares', optional: true}
    # - {job: 'build:win:lzo', optional: true}
    # - {job: 'build:win:boost', optional: true}
    # - {job: 'build:win:wireguard', optional: true}
    # - {job: 'build:win:gtest', optional: true}
    # - {job: 'build:win:openssl', optional: true}
    # - {job: 'build:win:zlib', optional: true}
    # - {job: 'build:win:curl', optional: true}
    # - {job: 'build:win:openvpn', optional: true}
    # - {job: 'build:win:protobuf', optional: true}
    # - {job: 'build:win:qt', optional: true}
    # - {job: 'build:win:stunnel', optional: true}
  script:
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_CARES "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_CARES}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_LZO "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_LZO}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_BOOST "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_BOOST}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_WIREGUARD "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_WIREGUARD}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_GTEST "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_GTEST}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_ZLIB "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_ZLIB}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_CURL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_CURL}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_OPENVPN "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENVPN}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_PROTOBUF "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PROTOBUF}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_QT "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_QT}"
    - $CURL_WIN --create-dirs -o $BUILDROOT/$ARTIFACT_STUNNEL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_STUNNEL}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command .\.base64_decode.ps1
    - Set-Variable -name VERSION -value $(python installer/windows/extract_version.py common/version/windscribe_version.h)
    - tools/build_all -zip
    - $CURL_WIN --upload-file build-exe/Windscribe_$VERSION.exe "${NEXUS_BASEURL}${NEXUS_PATH_ROOT}${NEXUS_PATH_BRANCHES}/${CI_COMMIT_BRANCH}/${DATE}/${CI_COMMIT_SHORT_SHA}/win/Windscribe_$VERSION.exe"
    - $CURL_WIN --upload-file build-exe/WindscribeSymbols_$VERSION.zip "${NEXUS_BASEURL}${NEXUS_PATH_ROOT}${NEXUS_PATH_BRANCHES}/${CI_COMMIT_BRANCH}/${DATE}/${CI_COMMIT_SHORT_SHA}/win/WindscribeSymbols_$VERSION.zip"
    - $CURL_WIN --upload-file build-exe/Windscribe_$VERSION.exe "${NEXUS_BASEURL}${NEXUS_PATH_ROOT}${NEXUS_PATH_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/Windscribe_$VERSION.exe"
    - $CURL_WIN --upload-file build-exe/WindscribeSymbols_$VERSION.zip "${NEXUS_BASEURL}${NEXUS_PATH_ROOT}${NEXUS_PATH_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/WindscribeSymbols_$VERSION.zip"
  # rules:
    # - changes:
      # - '.gitlab-ci.yml'
      # - tools/vars/jom.yml
      # - tools/vars/cares.yml
      # - tools/vars/lzo.yml
      # - tools/vars/boost.yml
      # - tools/vars/wireguard.yml
      # - tools/vars/gtest.yml
      # - tools/vars/openssl.yml
      # - tools/vars/zlib.yml
      # - tools/vars/curl.yml
      # - tools/vars/openvpn.yml
      # - tools/vars/protobuf.yml
      # - tools/vars/qt.yml
      # - tools/vars/stunnel.yml
