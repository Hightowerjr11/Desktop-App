# Define Stages
stages:
  - Build Dependencies
  - Build
  - Artifact Upload

#before_script:
#  - sample

# Set variables inherited by all jobs
variables:
  NEXUS_BASEURL: 'https://nexus.int.windscribe.com'
  NEXUS_PATH_ROOT: '/repository/$CI_PROJECT_NAME/$CI_PROJECT_NAME/'
  NEXUS_PATH_LATEST: '/latest'
  NEXUS_PATH_BRANCHES: '/branches'
  NEXUS_PATH_TAGS: '/tags'
  NEXUS_PATH_DEPS: '/repository/$CI_PROJECT_NAME/$CI_PROJECT_NAME/dependencies'
  NEXUS_PATH_DEPS_LATEST: '/latest'
  NEXUS_PATH_DEPS_BRANCHES: '/branches'
  NEXUS_PATH_DEPS_TAGS: '/tags'
  TARGET: '*.exe'
  #NEXUS_USERNAME: "sample"         # Set in Gitlab variables
  #NEXUS_PASSWORD: "VhVvMiM3jD04c"  # Set in Gitlab variables
  CODE_SIGNING_PFX_PATH: 'installer\windows\signing\code_signing.pfx'
  RUNNING_CI: 1
  BUILDROOT: 'build-libs'
  TMPROOT: 'temp'

include:
  - local: 'vars.yml'

build:jom:
  tags: [win10]
  stage: Build Dependencies
  artifacts:
    untracked: false
    paths: 
      - $BUILDROOT/$ARTIFACT_JOM
  script:
    # run this blindly until baked into image
    - python tools/bin/get-pip.py
    - python -m pip install -r tools/requirements.txt
    - tools/deps/install_jom -zip
  after_script:
    - Remove-Item -Path $BUILDROOT\jom -Force -Recurse
    - Remove-Item -Path $CI_PROJECT_DIR
    #- Remove-Item -Path $TMP_BOOST -Force -Recurse
  rules:
    - changes:
      - tools/vars/jom.yml

artifact-upload:jom:
  image: node:10.13.0
  stage: Artifact Upload
  cache: {}
  dependencies:
    - build:jom
  before_script:
  script:
    - curl --silent --show-error --fail --upload-file $BUILDROOT/$ARTIFACT_JOM -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/${ARTIFACT_JOM}"
  rules:
    - changes:
      - tools/vars/jom.yml

build:cares:
  tags: [win10]
  stage: Build Dependencies
  artifacts:
    untracked: false
    paths: 
      - $BUILDROOT/$ARTIFACT_CARES
  script:
    # run this blindly until baked into image
    - python tools/bin/get-pip.py
    - python -m pip install -r tools/requirements.txt
    - tools/deps/install_cares -zip
  after_script:
    - Remove-Item -Path $BUILDROOT\cares -Force -Recurse
    - Remove-Item -Path $CI_PROJECT_DIR
    #- Remove-Item -Path $TMP_BOOST -Force -Recurse
  rules:
    - changes:
      - tools/vars/cares.yml

artifact-upload:cares:
  image: node:10.13.0
  stage: Artifact Upload
  cache: {}
  dependencies:
    - build:cares
  before_script:
  script:
    - curl --silent --show-error --fail --upload-file $BUILDROOT/$ARTIFACT_CARES -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/${ARTIFACT_CARES}"
  rules:
    - changes:
      - tools/vars/cares.yml

build:lzo:
  tags: [win10]
  stage: Build Dependencies
  artifacts:
    untracked: false
    paths: 
      - $BUILDROOT/$ARTIFACT_LZO
  script:
    # run this blindly until baked into image
    - python tools/bin/get-pip.py
    - python -m pip install -r tools/requirements.txt
    - tools/deps/install_lzo -zip
  after_script:
    - Remove-Item -Path $BUILDROOT\lzo -Force -Recurse
    - Remove-Item -Path $CI_PROJECT_DIR
    #- Remove-Item -Path $TMP_BOOST -Force -Recurse
  rules:
    - changes:
      - tools/vars/lzo.yml

artifact-upload:lzo:
  image: node:10.13.0
  stage: Artifact Upload
  cache: {}
  dependencies:
    - build:lzo
  before_script:
  script:
    - curl --silent --show-error --fail --upload-file $BUILDROOT/$ARTIFACT_LZO -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/${ARTIFACT_LZO}"
  rules:
    - changes:
      - tools/vars/lzo.yml

#build:boost:
#  tags: [win10]
#  stage: Build Dependencies
#  artifacts:
#    untracked: false
#    paths: 
#      - $BUILDROOT/$ARTIFACT_BOOST
#  script:
#    # run this blindly until baked into image
#    - python tools/bin/get-pip.py
#    - python -m pip install -r tools/requirements.txt
#    - tools/deps/install_boost -zip
#  after_script:
#    - Remove-Item -Path $BUILDROOT\boost -Force -Recurse
#    #- Remove-Item -Path $TMP_BOOST -Force -Recurse
#  rules:
#    - changes:
#      - tools/vars/boost.yml
#
#artifact-upload:boost:
#  image: node:10.13.0
#  stage: Artifact Upload
#  cache: {}
#  dependencies:
#    - build:boost
#  before_script:
#  script:
#    - curl --silent --show-error --fail --upload-file $BUILDROOT_BOOST/$ARTIFACT_BOOST -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/${ARTIFACT_BOOST}"
#  rules:
#    - changes:
#      - tools/vars/boost.yml
#
# Build the exe on a runner with tag win10 and capture the artifact for successive jobs 
#build:
#  tags: [win10]
#  stage: Build
#  artifacts:
#    untracked: false
#    # capture the artifact here
#    paths:
#      - installer\windows\${TARGET}
#  # decode the pfx from base64 and write out
#  #before_script:
#  #  - powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command .\.base64_decode.ps1
#  script:
#  # trigger build
#    # TESTING PIPELINE: Build libraries.
#    # Install PIP (should be actually done once, as it affects the system, not only the repo).
#    - python tools/bin/get-pip.py
#    # This also updates the system, BUT is should be done if we updated repo's requirements.txt.
#    - python -m pip install -r tools/requirements.txt
#    # Run installation scripts in order of dependencies (if none, then arbitrary order).
#    - tools/deps/install_jom -zip
#    - tools/deps/install_openssl -zip
#    - tools/deps/install_cares -zip
#    - tools/deps/install_wireguard -zip
#    - tools/deps/install_lzo -zip
#    - tools/deps/install_zlib -zip
#    - tools/deps/install_curl -zip
#    - tools/deps/install_stunnel -zip
#    - tools/deps/install_openvpn -zip
#    - tools/deps/install_protobuf -zip
#    - tools/deps/install_boost -zip
#    # NB: Qt installation can be insanely long (more than 1h), and we hit a time limit.
#    #- tools/deps/install_qt -zip
#
#artifact-upload:
#  image: node:10.13.0
#  stage: Artifact Upload
#  cache: {}
#  dependencies:
#    - build
#  before_script:
#    # get release name
#    - VERSION=$(python2.7 installer/windows/extract_version.py common/version/windscribe_version.h)
#  script:
#    # post to nexus artifact store
#    - curl --silent --show-error --fail --upload-file installer/windows/Windscribe_$VERSION.exe -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} "${NEXUS_BASEURL}${NEXUS_PATH_ROOT}${NEXUS_PATH_BRANCHES}/${CI_COMMIT_BRANCH}/${DATE}/${CI_COMMIT_SHORT_SHA}/${NEXUS_FILE_NAME}"
#    - curl --silent --show-error --fail --upload-file installer/windows/Windscribe_$VERSION.exe -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} "${NEXUS_BASEURL}${NEXUS_PATH_ROOT}${NEXUS_PATH_BRANCHES}/${CI_COMMIT_BRANCH}${NEXUS_PATH_LATEST}/${NEXUS_FILE_NAME}"
#    - echo Got some fresh bins for you right here. ${NEXUS_BASEURL}${NEXUS_PATH_ROOT}${NEXUS_PATH_BRANCHES}/${CI_COMMIT_BRANCH}${NEXUS_PATH_LATEST}/Windscribe_$VERSION.exe
